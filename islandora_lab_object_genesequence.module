<?php
/**
  * @file 
  * Implements hook_islandora_required_objects()
  * 
  */

function islandora_lab_object_genesequence_forms($form_id, $args){
  /**
   * @author Nolan Phillips ncphillips@upei.ca
   *
   * @param $form_id
   * @param $args
   * @return $forms
   *
   * Implements hook_forms($form_id, $args)
   *
   * This function is used to associate a new Form ID with an existing form constructor.
   */
  $forms = array();
  switch($form_id){
    /**
     * ## Related LCMS Form
     * __Form ID:__ `related_genesequence_form`
     *
     * __Form Base ID:__ `related_islandora_objects_form`
     *
     * Creates a `related_islandora_objects_form` with the `$cmodel` and `$relationships`
     * arguments set as:
     *
     *      $cmodels = array('islandora:genesequence_cmodel');
     *      $relationships = array(FEDORA_RELS_EXT_URI => array('isPartOf'),);
     */
    case 'related_genesequence_form':
      $cmodels = array('islandora:genesequence_cmodel');
      $relationships = array(FEDORA_RELS_EXT_URI => array('isPartOf', 'isMemberOf',),);

      $args[] = $cmodels;
      $args[] = $relationships;

      $forms['related_genesequence_form'] = array(
        'callback' => 'related_islandora_objects_form',
        'callback arguments' => $args,
      );
      break;
  }
  return $forms;
}




function islandora_lab_object_genesequence_islandora_required_objects(IslandoraTuque $connection) {
  module_load_include('inc', 'islandora_bioinformatics_base', 'base_functions');

  $module_path = drupal_get_path('module', 'islandora_lab_object_genesequence');
  $genesequence_cmodel = $connection->repository->constructObject('islandora:genesequence_cmodel');
  $genesequence_cmodel->owner = 'fedoraAdmin';
  $genesequence_cmodel->label = 'Bioinformatics Genesequence Content Model';
  $genesequence_cmodel->models = 'fedora-system:ContentModel-3.0';
  
  // DS-COMPOSITE-MODEL Datastream.
  $datastream = $genesequence_cmodel->constructDatastream('DS-COMPOSITE-MODEL', 'X');
  $datastream->mimetype = 'text/xml';
  $datastream->setContentFromFile("$module_path/xml/content_models/genesequence_ds_composite_model.xml", FALSE);
  $genesequence_cmodel->ingestDatastream($datastream);
  
  // Trigger-Datastreams Datastream.
  $datastream = $genesequence_cmodel->constructDatastream('DS-COMPOSITE-MODEL', 'X');
  $datastream->mimetype = 'text/xml';
  $datastream->setContentFromFile("$module_path/xml/triggers/genesequence_triggers.xml", FALSE);
  $genesequence_cmodel->ingestDatastream($datastream);
  
  //Create relationship with LabObject
  $genesequence_cmodel->relationships->add(FEDORA_MODEL_URI, 'hasModel', 'islandora:lab_object_cmodel');
  
  // Genesequence Collection
  $genesequence_collection = $connection->repository->constructObject('islandora:genesequence_collection');
  $genesequence_collection->owner = 'fedoraAdmin';
  $genesequence_collection->label = 'Genesequence Collection';
  $genesequence_collection->models = 'islandora:collectionCModel';
  $genesequence_collection->relationships->add(FEDORA_RELS_EXT_URI, 'isMemberOfCollection', 'islandora:root');
  $datastream = $genesequence_collection->constructDatastream('COLLECTION_POLICY', 'X');
  $datastream->mimetype = 'text/xml';
  $datastream->setContentFromFile("$module_path/xml/collection_policies/islandora_lab_object_genesequence_collection_policy.xml", FALSE);
  $genesequence_collection->ingestDatastream($datastream);

  // add the relationship between genesequences and specimens
  $specimen_model = islandora_object_load("islandora:specimen_cmodel");
  add_hasPart($specimen_model, "islandora:genesequence_cmodel");
  add_isPartOf($genesequence_cmodel, "islandora:specimen_cmodel");

  return array(
    'islandora_lab_object_genesequence' => array(
      'title' => 'Bioinformatics Genesequence',
      'objects' => array(
          $genesequence_cmodel,
          $genesequence_collection,
      ),
    ),
  );
}

function islandora_lab_object_genesequence_menu(){
  return array(
    'islandora/object/%islandora_object/test_ingest_genesequence' => array(
        'title' => 'Ingest Gene Sequence',
        'page callback' => 'islandora_lab_object_genesequence_ingest',
        'page arguments' => array(2),
        'access callback' => TRUE,
      )
  );
}


function islandora_lab_object_genesequence_islandora_xml_form_builder_forms() {
  $module_path = drupal_get_path('module', 'islandora_lab_object_genesequence');
  return array(
    'Genesequence Form' => array(
      'form_file' => "$module_path/xml/islandora_lab_object_genesequence_form.xml",
    ),
  );
}

function islandora_lab_object_genesequence_islandora_xml_form_builder_form_associations() {
  $module_path = drupal_get_path('module', 'islandora_lab_object_genesequence');
  return array(
    'islandora_lab_object_genesequence_form' => array(
      'genesequence_cm' => 'islandora:genesequence',
      'form_name' => 'Genesequence Form',
      'dsid' => 'EML',
      'title_field' => array('taxonomy', 'species'),
      'transform' => '',
      //'self_transform' => "$module_path/xml/islandora_lab_object_genesequence_transform.xsl",
      'template' => FALSE,
    ),
  );
}

function islandora_lab_object_genesequence_islandora_genesequence_cmodel_islandora_ingest_steps(array $configuration) {
  return array(
    'islandora_lab_object_genesequence_fasta_file_upload' => array(
      'weight' => 8,
      'type' => 'form',
      'form_id' => 'islandora_lab_object_genesequence_upload_fasta_form',
      'module' => 'islandora_lab_object_genesequence',
      'file' => 'includes/islandora_lab_object_genesequence_upload_fasta.form.inc'
    ),
   /* 'islandora_lab_object_lcms_raw_file_upload' => array(
      'weight' => 9,
      'type' => 'form',
      'form_id' => 'islandora_lab_object_lcms_upload_raw_form',
      'module' => 'islandora_lab_object_lcms',
      'file' => 'includes/islandora_lab_object_lcms_upload_raw.form.inc'
    )*/
  );
}

/*
function islandora_bioinformatics_genesequence_islandora_genesequence_cmodel_islandora_derivatives() {
	return array(
		array(
		  'source_dsid' => 'FASTA',
		  'weight' => '0',
		  'function' => array(
			'islandora_bioinformatics_genesequence_create_fasta_file',
		  ),
		  'file' => drupal_get_path('module', 'islandora_bioinformatics_genesequence') . '/includes/derivatives.inc',
		),
	);
}
*/


/**
 * @author Quintin Dawson qdawson@upei.ca
 * This function should create a new gene sequence object and create a relationship between it and the $parent object
 */

function islandora_lab_object_genesequence_ingest(AbstractObject $parent) {
  $collection = islandora_object_load('islandora:genesequence_collection');
  if($collection !== FALSE) {
    if (($configuration = islandora_lab_object_genesequence_load_ingest_configuration($collection, $parent)) !== FALSE) {
      module_load_include('inc', 'islandora', 'includes/ingest.form');
      return drupal_get_form('islandora_ingest_form', $configuration);
    }
  }
  drupal_not_found();
}


function islandora_lab_object_genesequence_load_ingest_configuration(AbstractObject $collection, AbstractObject $parent) {
  $is_collection_object = in_array('islandora:collectionCModel', $collection->models);
  $has_policy = isset($collection['COLLECTION_POLICY']);
  if (!$is_collection_object || !$has_policy) {
    return array();
  }

  $object = $collection->repository->constructObject('islandora');
  $object->label = 'New Object';

  $results = $object->relationships->get(FEDORA_RELS_EXT_URI, 'isMemberOfCollection', $collection->id);
  if (empty($results)) {
    $object->relationships->add(FEDORA_RELS_EXT_URI, 'isMemberOfCollection', $collection->id);
  }

  $results = $object->relationships->get(FEDORA_RELS_EXT_URI, 'isPartOf', $parent->id);
  if (empty($results)) {
    $object->relationships->add(FEDORA_RELS_EXT_URI, 'isPartOf', $parent->id);
  }

  $policy = new CollectionPolicy($collection['COLLECTION_POLICY']->content);

  return array(
    'collection' => $collection,
    'models' => array('islandora:genesequence_cmodel'), //array_keys($policy->getContentModels()),
    'objects' => array($object),
    'parent' => $collection->id,
  );
}
